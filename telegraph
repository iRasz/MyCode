// tourl telegraph

case 'telegraph': {
    const FormData = require('form-data');
    const fetch = require('node-fetch');
    try {
        let q = m.quoted ? m.quoted : m;
        let mime = (q.msg || q).mimetype || '';

        // Memeriksa apakah ada media yang ditemukan
        if (!mime) {
            return m.reply('No media found');
        }

        await lilychan.sendMessage(m.chat, {
            react: {
                text: 'ðŸ•’',
                key: m.key,
            }
        });

        const fileBuffer = await quoted.download();

        const formData = new FormData();
        formData.append('images', fileBuffer, 'image.jpg'); // Nama file bisa disesuaikan

        const response = await fetch('https://telegraph.zorner.men/upload', {
            method: 'POST',
            headers: {
                ...formData.getHeaders(),
            },
            body: formData,
        });

        if (!response.ok) {
            throw new Error('Upload gagal dengan status ' + response.status);
        }

        const result = await response.json();
        m.reply('Upload Success:\n> ' + result.links[0]);
    } catch (error) {
        m.reply('Error saat mengunggah file: ' + error.message);
    }
}
break
